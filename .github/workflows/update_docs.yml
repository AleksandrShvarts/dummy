name: Update documentation
on:
  push:
    branches:
      - dev
    tags:        
      - 'v**'
jobs:
  check:
      runs-on: ubuntu-latest
      outputs:
        branch: ${{ steps.check_step.outputs.branch }}
      steps:
        - name: Checkout
          uses: actions/checkout@v2
          with:
            fetch-depth: 0

        - name: Get current branch
          id: check_step
          run: |
            raw=$(git branch -r --contains ${{ github.ref }})
            branch=${raw##*/}
            echo "::set-output name=branch::$branch"
            echo "Branch is $branch."
  print:
    runs-on: ubuntu-latest
    steps:
      - name: Echo branch
        run: echo "${{ github.event.base_ref }}"      
  update-docs:
    runs-on: ubuntu-latest
    needs: check # Wait for check step to finish
    permissions: write-all
    # To prevent run if new tag created not in dev
    if: ${{ needs.check.outputs.branch == 'dev' }}
    steps:
        - uses: actions/checkout@v1
        - uses: ammaraskar/sphinx-action@master
          with:
              build-command: "sphinx-build -b html . _build"
              docs-folder: "docs/source"
        - name: Commit documentation changes
          run: |
              git config --local user.email "action@github.com"
              git config --local user.name "GitHub Action"
              git add .
              git commit -m "Update documentation" -a || true
              # The above command will fail if no changes were present, so we ignore
              # that.
        - name: Push changes
          uses: ad-m/github-push-action@master
          with:
            branch: dev
            github_token: ${{ secrets.GITHUB_TOKEN }}
